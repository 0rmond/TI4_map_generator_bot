Commands:
First you need to create game and set active game you modifying.
To create game use:
/create_game gameName
To set active game use:
/set_game gameName <- Map name can only contain a-z A-Z 0-9 symbols
Now automatically sets active map in channels that go: gameName-map-updates
so in any channel that is named like this, you don't need to set active map, it automatically sets for you
so switching between games is much easier.

/game set_game_status status gameName(Optional)
status: open or locked
Status open, means anyone can edit map, can join map as player;
Status locked means, only joined players and map creator can edit map. No more players can join
/game join gameName <- join an open map to be able to edit even if map is locked
/game leave gameName <- leave an open map
/game info gameName <- information of map, status if open/locked and player list
/game add @playerName... gameName <- add single or multiple players to game, gameName is optional and can bet set if no activeMap present
/game remove  @playerName... gameName <- remove single or multiple players to game, gameName is optional and can bet set if no activeMap present
/game set_order @playerName1 @playerName2 .....gameName
Add all players in order for game
/game sc_count <- sets game SC count, used if game requires more than 8 Strategy cards, default is 8
/game setup display_type(optional) player_count_for_map(optional) <- sets default display type for game. All (map + player stats), map or player stats
player_count_for_map set player map count 6 (default) or 8 for bigger map

For easy of setup suggest first command after map creation use
/add_tile setup 0
This adds a template with positions

Now additional commands:
/add_tile tileName positionOnMap
(We using somno template positions on map. from setup template and you see positions.
Also we support TopLeft, TopRight, BottomLeft and BottomRight positions coresponding to TL, TR, BL, BR
Mecatol position is MR)
/add_tile_list tileList <- tile list is code from map Generators like TTS uses, example: https://ti4-map-generator.derekpeterson.ca/
You can use also tileID, so liek TI4 marks tiles 01 is Jord for example
/list_tiles <- lists all tiles, use starting number id to add to map
/remove_tile tileName or position
/list_games <- lists all available maps that are created
/list_planets <- lists all available planets
/delete_game <-deletes your game, only can delete the map you created
/show_game gameName(optional) display_type(optional) <- displays the game map, display_type can be set to all, map, stats. Displays map + player stats, just map or just player stats
If you have active game set, it shows your active game if no game name is defines
/list_units <- lists all possible units
/add_cc colorList tile or position <- add's cc to system: colorList can be pink,red,black as example/
/remove_cc color tile or position <- remove's cc from system: ccolorList can be pink,red,black as example/
/remove_all_cc confirmation(YES) <- need to type in YES, will remove all CC's from active game
/add_control color tile planetList <- need to specify tile and planetList, example /add_control pink 3a arnor,lor
/remove_control color tile planet
and most interesting is
/add_units color tile unitList
/remove_units color tile unitList
/remove_all_units color tile
/add_damage_unit color tile unitList
/remove_damage_unit color tile unitList
/remove_damage_all_unit color tile
/add_frontier_tokens CONFIRM(YES) <- adds frontier tokens to all tiles that can have one

commands improvements:
/remove_units and /move_units
priority is move/remove damaged units. If we selecte priority_no_damage (and type in yes or y)
units without damage will be removed/moved to other system
also moves damage to new system by default if option  is not specified

unitList examples and explanation. If dont specify planet, all units go into space
Listing only unit list, so add into command that you want
dn <- sinle dread into space
dread <- same sinle dread into space
3 dn <- 3 dreads added into space
3 dn, 2 destroyers <- 3dread and 2 dd added into space
3 dn, 2 dd, gf quann <- 3 dread and 2dd added into space, 1 gf added onto planet quann
ws, 6 ff, sd quann, 3 inf quann, mech quann <- warsun and 6 fighters added into space, spacedock, 3 infantry and mech added into quann

/move_units color systemFrom unitList systemTo unitList addCC
Standard fields to add tile/system, unit list same as add, remove, and we have optional field addCC, type anything in to not add cc into moved system
Example:
/move_units pink quann 2 dn, dd, gf, gf quann wellon 2 dn, dd, 2 gf wellon

now: add_units, remove_units, move_units command, for planet name, you can use short of existing planet
example
Arnor/Lor, can use a and l, or ar or arno, or lo
Sakulag/Lazar example: s and l, or sa and la
Abyz/Fria like a and f etc
so you don't need full name, can use first letter or few first letters, if system with same starting letter like
Tequran/Torkan, can use te and to ðŸ™‚
hope helps speed things up

/add_token tokenName system/tile planetNameOptional <- same as add control counter, specify token and planet name is optional
/remove_token tokenName system/tile planetNameOptional <- same as add control counter, specify token and planet name is optional
Attachement tokens can only be added to planets

/player stats .... <- can set all the major stats for player, when SC is picked, TG's automatically added to user Trade Goods from left on SC TG's
/player setup faction color <- needs to set player faction and color

Cards commands
/cards so_draw count(optional) <- draws a secret or specified number of secrets
/cards discard soUniqueID <- discards given ID Secret objective and shuffles the SO deck. soUniqueID is generated just for player and are unique each time
/cards info <- sents player all private cards for given game
/cards so_show soUniqueID player <- sends given Secret Objective to player and changes soUniqueID
/cards so_show_all player <- sends all Secret Objectives to player
/cards so_show_to_all soUniqueID <- displays SO to table and changes soUniqueID

/cards ac_draw count(optional) <- draws a secret or specified number of secrets
/cards ac_discard acUniqueID <- discards given ID action card and shuffles the ac deck. acUniqueID is generated just for player and are unique each time
/cards ac_show acUniqueID player <- sends given action card to player and changes acUniqueID
/cards ac_show_all player <- sends all action cards to player
/cards ac_show_to_all acUniqueID <- displays ac to table and changes acUniqueID
/cards ac_play acUniqueID <- displays ac to table that was played and discards
/cards ac_shuffle_deck <- shuffles Action card deck
/cards ac_pick_from_discard acUniqueIDFromDiscardPile <- Pick a Action card from discard pile and put in your hand
/cards ac_shuffle_back_into_deck acUniqueIDFromDiscardPile <- Shuffle Action card from discard pile back into Action card Deck
/cards ac_reveal_and_put_into_discard <- Reveal top Action card from deck and put into discard pile
/cards ac_show_discard_list <- Show all discarded Action cards
/cards ac_send acUniqueID player <- Sends selected AC from your hand to player hand

/status cleanup confirmYES <- cleans up all CC's, all unit damage, resets passed status and SC played and SC player selection :)

/agenda draw countOptional <- draw top agendas from deck. Agendas "remain" in deck till you place them. Meaning if you forget to use commands put_top or put_bottom and try reveal agenda, the sent to you will be in deck still :)
/agenda put_top agendaID <- put given agenda at top. Example you draw A and B agenda. And put A at top, then B at top. You end up with order B, A, to reveal. It's like physically you would do top and next top covers previous one
/agenda put_bottom agendaID <- puts agenda bottom
/agenda look_at_top <- shows top agenda, no action possible
/agenda show_discarded <- shows discarded agendas and the id's
/agenda reveal <- reveals agenda to all with ID and automatically puts in discard pile
/agenda add_law agendaID optionalTextForElected <- add's law to game map and optionalTextForElected is used to define player, or PO or anything, free text can be entered. AgendaID is used from discard pile or when revealed
/agenda remove_law agendaID <- removes law from game and puts in discard, ID is showed in map

/status po_reveal_stage1 <- reveals stage 1 public objective
/status po_reveal_stage2 <- reveals stage 2 public objective
/status po_add_custom name vpWorth <- adds a custom objective with given name and vp worth, like need law VP, need SO scorable for all, use this
/status po_remove_custom objectiveID <- removes custom objective
/status po_score id <- score existing objevtcive
/status po_unscore id <- unscore if you scored by mistake
/status po_shuffle_back id <- shuffles given objective back into deck, don't use for custom ones, just remove those
/status sc_trade_goods scNumber tgCount <- add's Trade goods to unchoose strategy cards, tgCount is total how much it should be on card, when SC is picked, TG's automatically added to user Trade Goods
